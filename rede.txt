novo ubuntu 18.04

memoria 4096

15 Gb

localizar iso ubutu botao direito montar

iniciar maquina

instalar

instalação normal




pasta diferente

programação  clonar repositorio na pasta htdocs

rodar: composer install

 ou composer require



mesma máquina - git pull


------------------------------------------------------------------------------------------------

xampp apache config php my admin config.inc.php

$cfg['Servers'][$i]['AllowNoPassword'] = true;

<?php
    $conex = new PDO('mysql:host=localhost;dbname=sistematwig', 'root', '');

    $usuarios = $conex->query('SELECT * FROM usuarios');

    while($usuario = $usuarios->fetch(PDO:FETCH_OBJ)){
        var_dump($usuario);
    };




??????????????????
    //cria a consulta e aquarda os dados
    $sql = $conex->prepare('select * from usuarios where username = ? and senha = ?');


    //adiciona os dados na consulta
    $sql->bindParam(1, $user);
    $sql->bindParam(2, $pass);



    
/////////////////////////////////nomeia
    //cria a consulta e aquarda os dados
    $sql = $conex->prepare('select * from usuarios where username = :usr and senha = :pass');


    //adiciona os dados na consulta
    $sql->bindParam(':usr', $user);
    $sql->bindParam(':pass', $pass);





--------------------------------------------------------------------------------------------

node js
/ctrl shift aspas
/cd pasta que tá

npm init -y
/baixa package.json

node (nome do arquivo)"index.js"

console.log('frase') /serve para escrever no terminal

package.json
  "scripts": {
    "dev": "node index.js"
  },
/terminal
npm run dev
/botando nodemon
package.json
  "scripts": {
    "dev": "nodemon index.js"
  },
/roda sempre que atualiza


/instala package-lock.json e node_modules modo de desenvolvimento, não de produção
npm install nodemon -D

/instala package-lock.json e node_modules modo de produção
npm install nodemon --prod

/receber de alguem
npm install








/let dura apenas dentro ou fora / muda
/const constante não pode mudar, não pode ser um array e depois adicionar outro array

let = nome = "Pedro"

if (true){
    let nome = "Sperotto"
    escreveria Sperotto
}
for (let i =0; i <10; i++){
    console.log(i)
    i nao existe no resto
}

console.log(nome) escreve pedro



//vetores
const vetor = [1,2,3,4,5]
//const a = vetor[0]
//const b = vetor[1]
//const c = vetor[2]
//const d = vetor[3]
//const e = vetor[4]
//mesma coisa do de cima, só mais rápido
const [a,b,c,d,e] = vetor
//objetos
const pessoa = {nome: 'Pedro', sobrenome: 'Sperotto'}

//const nome = pessoa.nome
//const sobrenome = pessoa.sobrenome
//mesma coisa do de cima, só mais rápido 
const {sobrenome:ultimo, nome} = pessoa
//( : para renomear variavel )



//funções
function soma (a, b) {
    return a + b;
}
//arrow function
const soma1 = (a, b) => {
    return a + b;
}
//mesma coisa de cima
const soma2 = (a,b) => a+b;
//cria e ja executa função
console.log(((a,b) => a+b)(3,5))


const n = "Pedro"
const s = "Sperotto"
const nomeCompleto = `${n} ${4+8} ${s}`
console.log(nomeCompleto)



// Operador...     ...só no final, pega tudo que sobrar
const alunos = [1234, 7.0, 8.0, 9.0]

const [matricula, ...notas] = alunos

console.log(matricula, notas)

// coloca as informações de notas para notas2, sem os a mais não funciona
const notas2 = [...notas]


const mostraNome = p => p.nome + " " + p.sobrenome
console.log(mostraNome(pessoa))
//mesma coisa de cima
const mostraNome2 = ({nome, sobrenome}) => `${nome} ${sobrenome}`
console.log(mostraNome2(pessoa))







--------------------------------------------------------------------------------------------

---mysql

/ctrl shift aspas

/variaveis ambiente não sistema

path procurar xampp mysql bin

mysql -h localhost -u root -p

MariaDB [(none)]>  source C:/xampp/htdocs/programas2/teste/desenvolvimento/dump.sql;    



inicia algo sem realmente fazer
start transaction;

commit; realiza tudo que fez
rollback; desfaz tudo que fez






-----------------------------------------------------------------------------

sandro

enlace

taxa de transmissão em bits por segundo

comutador de pacote: um comutador emcaminha o pacote que chega de um enlace e manda pra outro

pacote: separa o conteudo para enviar vários pedaços

comutadores de camada de enlace são tipicamente utilizados em rede de acesso, enquanto roteadores são utilizados

rota ou caminho: caminho enlaces switches

ISPs provedores de serviço de internet, empresas de tv a cabo, telefonia

8 8 8 8
43 6
43 364

Protocolo: protocolos que controlam o envio e o recebimento de informações

TCP/IP são os dois protocolos mais importantes da internet

ip especifica o formato de pacotes que são enviados e recebidos entre roteadores e sistemas finais




camadas

comunica uma máquina com outra máquina, um cliente com servidor
           \/
aplicaçã>transporte    >      rede>enlace>física
http smtp pcp (numero de porta) ip   wifi